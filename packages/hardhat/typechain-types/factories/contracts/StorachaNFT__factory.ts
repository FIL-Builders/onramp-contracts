/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../common";
import type {
  StorachaNFT,
  StorachaNFTInterface,
} from "../../contracts/StorachaNFT";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "storacha_cid",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a14dd1bdc9858da1853919560aa1b8152506040518060400160405280600481526020016314d3919560e21b815250816000908162000064919062000123565b50600162000073828262000123565b505050620001ef565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000a757607f821691505b602082108103620000c857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011e576000816000526020600020601f850160051c81016020861015620000f95750805b601f850160051c820191505b818110156200011a5782815560010162000105565b5050505b505050565b81516001600160401b038111156200013f576200013f6200007c565b620001578162000150845462000092565b84620000ce565b602080601f8311600181146200018f5760008415620001765750858301515b600019600386901b1c1916600185901b1785556200011a565b600085815260208120601f198616915b82811015620001c0578886015182559484019460019091019084016200019f565b5085821015620001df5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61111280620001ff6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063c4e41b2211610066578063c4e41b22146101ff578063c87b56dd14610207578063d85d3d271461021a578063e985e9c51461022d57600080fd5b806370a08231146101b057806395d89b41146101d1578063a22cb465146101d9578063b88d4fde146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806342842e0e1461018a5780636352211e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004610c27565b610269565b60405190151581526020015b60405180910390f35b61012a610306565b6040516101199190610c91565b61014a610145366004610ca4565b610398565b6040516001600160a01b039091168152602001610119565b610175610170366004610cd9565b6103c1565b005b610175610185366004610d03565b6103d0565b610175610198366004610d03565b610479565b61014a6101ab366004610ca4565b610499565b6101c36101be366004610d3f565b6104a4565b604051908152602001610119565b61012a610505565b6101756101e7366004610d5a565b610514565b6101756101fa366004610e22565b61051f565b6006546101c3565b61012a610215366004610ca4565b610537565b610175610228366004610e9e565b6105d9565b61010d61023b366004610ee7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806102cc57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061030057507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461031590610f1a565b80601f016020809104026020016040519081016040528092919081815260200182805461034190610f1a565b801561038e5780601f106103635761010080835404028352916020019161038e565b820191906000526020600020905b81548152906001019060200180831161037157829003601f168201915b5050505050905090565b60006103a382610613565b506000828152600460205260409020546001600160a01b0316610300565b6103cc82823361064c565b5050565b6001600160a01b0382166103ff57604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061040c838333610659565b9050836001600160a01b0316816001600160a01b031614610473576040517f64283d7b0000000000000000000000000000000000000000000000000000000081526001600160a01b03808616600483015260248201849052821660448201526064016103f6565b50505050565b6104948383836040518060200160405280600081525061051f565b505050565b600061030082610613565b60006001600160a01b0382166104e9576040517f89c62b64000000000000000000000000000000000000000000000000000000008152600060048201526024016103f6565b506001600160a01b031660009081526003602052604090205490565b60606001805461031590610f1a565b6103cc33838361075f565b61052a8484846103d0565b6104733385858585610817565b600081815260076020526040902080546060919061055490610f1a565b80601f016020809104026020016040519081016040528092919081815260200182805461058090610f1a565b80156105cd5780601f106105a2576101008083540402835291602001916105cd565b820191906000526020600020905b8154815290600101906020018083116105b057829003601f168201915b50505050509050919050565b600680549060006105e983610f54565b90915550506006546105fb3382610942565b60008181526007602052604090206104948382610fc3565b6000818152600260205260408120546001600160a01b03168061030057604051637e27328960e01b8152600481018490526024016103f6565b61049483838360016109c0565b6000828152600260205260408120546001600160a01b039081169083161561068657610686818486610b0b565b6001600160a01b038116156106c4576106a36000856000806109c0565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156106f3576001600160a01b0385166000908152600360205260409020805460010190555b600084815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6001600160a01b0382166107aa576040517f5b08ba180000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201526024016103f6565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561093b57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610859908890889087908790600401611083565b6020604051808303816000875af1925050508015610894575060408051601f3d908101601f19168201909252610891918101906110bf565b60015b6108fd573d8080156108c2576040519150601f19603f3d011682016040523d82523d6000602084013e6108c7565b606091505b5080516000036108f557604051633250574960e11b81526001600160a01b03851660048201526024016103f6565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461093957604051633250574960e11b81526001600160a01b03851660048201526024016103f6565b505b5050505050565b6001600160a01b03821661096c57604051633250574960e11b8152600060048201526024016103f6565b600061097a83836000610659565b90506001600160a01b03811615610494576040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600060048201526024016103f6565b80806109d457506001600160a01b03821615155b15610ace5760006109e484610613565b90506001600160a01b03831615801590610a105750826001600160a01b0316816001600160a01b031614155b8015610a4257506001600160a01b0380821660009081526005602090815260408083209387168352929052205460ff16155b15610a84576040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201526024016103f6565b8115610acc5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50506000908152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610b16838383610b88565b610494576001600160a01b038316610b4457604051637e27328960e01b8152600481018290526024016103f6565b6040517f177e802f0000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602481018290526044016103f6565b60006001600160a01b03831615801590610c065750826001600160a01b0316846001600160a01b03161480610be257506001600160a01b0380851660009081526005602090815260408083209387168352929052205460ff165b80610c0657506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b031981168114610c2457600080fd5b50565b600060208284031215610c3957600080fd5b8135610c4481610c0e565b9392505050565b6000815180845260005b81811015610c7157602081850181015186830182015201610c55565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610c446020830184610c4b565b600060208284031215610cb657600080fd5b5035919050565b80356001600160a01b0381168114610cd457600080fd5b919050565b60008060408385031215610cec57600080fd5b610cf583610cbd565b946020939093013593505050565b600080600060608486031215610d1857600080fd5b610d2184610cbd565b9250610d2f60208501610cbd565b9150604084013590509250925092565b600060208284031215610d5157600080fd5b610c4482610cbd565b60008060408385031215610d6d57600080fd5b610d7683610cbd565b915060208301358015158114610d8b57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115610dc757610dc7610d96565b604051601f8501601f19908116603f01168101908282118183101715610def57610def610d96565b81604052809350858152868686011115610e0857600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215610e3857600080fd5b610e4185610cbd565b9350610e4f60208601610cbd565b925060408501359150606085013567ffffffffffffffff811115610e7257600080fd5b8501601f81018713610e8357600080fd5b610e9287823560208401610dac565b91505092959194509250565b600060208284031215610eb057600080fd5b813567ffffffffffffffff811115610ec757600080fd5b8201601f81018413610ed857600080fd5b610c0684823560208401610dac565b60008060408385031215610efa57600080fd5b610f0383610cbd565b9150610f1160208401610cbd565b90509250929050565b600181811c90821680610f2e57607f821691505b602082108103610f4e57634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201610f7457634e487b7160e01b600052601160045260246000fd5b5060010190565b601f821115610494576000816000526020600020601f850160051c81016020861015610fa45750805b601f850160051c820191505b8181101561093957828155600101610fb0565b815167ffffffffffffffff811115610fdd57610fdd610d96565b610ff181610feb8454610f1a565b84610f7b565b602080601f831160018114611026576000841561100e5750858301515b600019600386901b1c1916600185901b178555610939565b600085815260208120601f198616915b8281101561105557888601518255948401946001909101908401611036565b50858210156110735787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001600160a01b038087168352808616602084015250836040830152608060608301526110b56080830184610c4b565b9695505050505050565b6000602082840312156110d157600080fd5b8151610c4481610c0e56fea2646970667358221220a8264140da06e62eda18343a1b8833f310a3da70d89673391bea414dcdcfa4fb64736f6c63430008170033";

type StorachaNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StorachaNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StorachaNFT__factory extends ContractFactory {
  constructor(...args: StorachaNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StorachaNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StorachaNFT__factory {
    return super.connect(runner) as StorachaNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StorachaNFTInterface {
    return new Interface(_abi) as StorachaNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): StorachaNFT {
    return new Contract(address, _abi, runner) as unknown as StorachaNFT;
  }
}
