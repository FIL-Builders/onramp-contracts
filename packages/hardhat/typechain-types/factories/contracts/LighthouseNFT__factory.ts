/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../common";
import type {
  LighthouseNFT,
  LighthouseNFTInterface,
} from "../../contracts/LighthouseNFT";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "accessList",
        type: "address[]",
      },
    ],
    name: "grantAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isOpenToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "lighthouse_cid",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "lighthouse_cid",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "accessList",
        type: "address[]",
      },
    ],
    name: "mintPrivate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "accessList",
        type: "address[]",
      },
    ],
    name: "revokeAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600d81526020016c131a59da1d1a1bdd5cd9539195609a1b815250604051806040016040528060048152602001631313919560e21b815250816000908162000066919062000125565b50600162000075828262000125565b505050620001f1565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000a957607f821691505b602082108103620000ca57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000120576000816000526020600020601f850160051c81016020861015620000fb5750805b601f850160051c820191505b818110156200011c5782815560010162000107565b5050505b505050565b81516001600160401b038111156200014157620001416200007e565b620001598162000152845462000094565b84620000d0565b602080601f831160018114620001915760008415620001785750858301515b600019600386901b1c1916600185901b1785556200011c565b600085815260208120601f198616915b82811015620001c257888601518255948401946001909101908401620001a1565b5085821015620001e15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61167f80620002016000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c80638138e572116100cd578063c4e41b2211610081578063ced1419811610066578063ced14198146102ed578063d85d3d2714610300578063e985e9c51461031357600080fd5b8063c4e41b22146102d2578063c87b56dd146102da57600080fd5b806395d89b41116100b257806395d89b41146102a4578063a22cb465146102ac578063b88d4fde146102bf57600080fd5b80638138e5721461026e5780638206b7431461029157600080fd5b8063105fd8c91161012457806342842e0e1161010957806342842e0e146102275780636352211e1461023a57806370a082311461024d57600080fd5b8063105fd8c91461020157806323b872dd1461021457600080fd5b8063081812fc11610155578063081812fc146101ae578063095ea7b3146101d95780630c55c1e0146101ee57600080fd5b806301ffc9a71461017157806306fdde0314610199575b600080fd5b61018461017f36600461101b565b61034f565b60405190151581526020015b60405180910390f35b6101a16103ec565b604051610190919061107e565b6101c16101bc366004611091565b61047e565b6040516001600160a01b039091168152602001610190565b6101ec6101e73660046110c6565b6104a7565b005b6101ec6101fc3660046111be565b6104b6565b6101ec61020f3660046111be565b6105b0565b6101ec610222366004611205565b6106a2565b6101ec610235366004611205565b610746565b6101c1610248366004611091565b610761565b61026061025b366004611241565b61076c565b604051908152602001610190565b61018461027c366004611091565b60009081526009602052604090205460ff1690565b6101ec61029f3660046112d4565b6107cd565b6101a1610896565b6101ec6102ba36600461132e565b6108a5565b6101ec6102cd36600461136a565b6108b0565b600654610260565b6101a16102e8366004611091565b6108c8565b6101846102fb3660046113e6565b61096a565b6101ec61030e366004611412565b6109b0565b610184610321366004611447565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806103b257506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806103e657507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600080546103fb90611471565b80601f016020809104026020016040519081016040528092919081815260200182805461042790611471565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b600061048982610a07565b506000828152600460205260409020546001600160a01b03166103e6565b6104b2828233610a40565b5050565b336104c083610761565b6001600160a01b0316146105415760405162461bcd60e51b815260206004820152602c60248201527f4c69676874686f757365204e46543a204f6e6c79206f776e65722063616e207260448201527f65766f6b6520616363657373000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60005b81518110156105ab57600083815260086020526040812083518290859085908110610571576105716114ab565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610544565b505050565b336105ba83610761565b6001600160a01b0316146106365760405162461bcd60e51b815260206004820152602b60248201527f4c69676874686f757365204e46543a204f6e6c79206f776e65722063616e206760448201527f72616e74206163636573730000000000000000000000000000000000000000006064820152608401610538565b60005b81518110156105ab576000838152600860205260408120835160019290859085908110610668576106686114ab565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610639565b6001600160a01b0382166106cc57604051633250574960e11b815260006004820152602401610538565b60006106d9838333610a4d565b9050836001600160a01b0316816001600160a01b031614610740576040517f64283d7b0000000000000000000000000000000000000000000000000000000081526001600160a01b0380861660048301526024820184905282166044820152606401610538565b50505050565b6105ab838383604051806020016040528060008152506108b0565b60006103e682610a07565b60006001600160a01b0382166107b1576040517f89c62b6400000000000000000000000000000000000000000000000000000000815260006004820152602401610538565b506001600160a01b031660009081526003602052604090205490565b600680549060006107dd836114c1565b90915550506006546107ef3382610b53565b60008181526007602052604090206108078482611530565b5060008181526008602090815260408083203384529091528120805460ff191660011790555b825181101561074057600082815260086020526040812084516001929086908590811061085c5761085c6114ab565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161082d565b6060600180546103fb90611471565b6104b2338383610bd1565b6108bb8484846106a2565b6107403385858585610c89565b60008181526007602052604090208054606091906108e590611471565b80601f016020809104026020016040519081016040528092919081815260200182805461091190611471565b801561095e5780601f106109335761010080835404028352916020019161095e565b820191906000526020600020905b81548152906001019060200180831161094157829003601f168201915b50505050509050919050565b60008281526009602052604081205460ff16806109a9575060008381526008602090815260408083206001600160a01b038616845290915290205460ff165b9392505050565b600680549060006109c0836114c1565b90915550506006546109d23382610b53565b60008181526007602052604090206109ea8382611530565b506000908152600960205260409020805460ff1916600117905550565b6000818152600260205260408120546001600160a01b0316806103e657604051637e27328960e01b815260048101849052602401610538565b6105ab8383836001610db4565b6000828152600260205260408120546001600160a01b0390811690831615610a7a57610a7a818486610eff565b6001600160a01b03811615610ab857610a97600085600080610db4565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610ae7576001600160a01b0385166000908152600360205260409020805460010190555b600084815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6001600160a01b038216610b7d57604051633250574960e11b815260006004820152602401610538565b6000610b8b83836000610a4d565b90506001600160a01b038116156105ab576040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260006004820152602401610538565b6001600160a01b038216610c1c576040517f5b08ba180000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610538565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610dad57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610ccb9088908890879087906004016115f0565b6020604051808303816000875af1925050508015610d06575060408051601f3d908101601f19168201909252610d039181019061162c565b60015b610d6f573d808015610d34576040519150601f19603f3d011682016040523d82523d6000602084013e610d39565b606091505b508051600003610d6757604051633250574960e11b81526001600160a01b0385166004820152602401610538565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610dab57604051633250574960e11b81526001600160a01b0385166004820152602401610538565b505b5050505050565b8080610dc857506001600160a01b03821615155b15610ec2576000610dd884610a07565b90506001600160a01b03831615801590610e045750826001600160a01b0316816001600160a01b031614155b8015610e3657506001600160a01b0380821660009081526005602090815260408083209387168352929052205460ff16155b15610e78576040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152602401610538565b8115610ec05783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50506000908152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610f0a838383610f7c565b6105ab576001600160a01b038316610f3857604051637e27328960e01b815260048101829052602401610538565b6040517f177e802f0000000000000000000000000000000000000000000000000000000081526001600160a01b038316600482015260248101829052604401610538565b60006001600160a01b03831615801590610ffa5750826001600160a01b0316846001600160a01b03161480610fd657506001600160a01b0380851660009081526005602090815260408083209387168352929052205460ff165b80610ffa57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b03198116811461101857600080fd5b50565b60006020828403121561102d57600080fd5b81356109a981611002565b6000815180845260005b8181101561105e57602081850181015186830182015201611042565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006109a96020830184611038565b6000602082840312156110a357600080fd5b5035919050565b80356001600160a01b03811681146110c157600080fd5b919050565b600080604083850312156110d957600080fd5b6110e2836110aa565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561112f5761112f6110f0565b604052919050565b600082601f83011261114857600080fd5b8135602067ffffffffffffffff821115611164576111646110f0565b8160051b611173828201611106565b928352848101820192828101908785111561118d57600080fd5b83870192505b848310156111b3576111a4836110aa565b82529183019190830190611193565b979650505050505050565b600080604083850312156111d157600080fd5b82359150602083013567ffffffffffffffff8111156111ef57600080fd5b6111fb85828601611137565b9150509250929050565b60008060006060848603121561121a57600080fd5b611223846110aa565b9250611231602085016110aa565b9150604084013590509250925092565b60006020828403121561125357600080fd5b6109a9826110aa565b600067ffffffffffffffff831115611276576112766110f0565b611289601f8401601f1916602001611106565b905082815283838301111561129d57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126112c557600080fd5b6109a98383356020850161125c565b600080604083850312156112e757600080fd5b823567ffffffffffffffff808211156112ff57600080fd5b61130b868387016112b4565b9350602085013591508082111561132157600080fd5b506111fb85828601611137565b6000806040838503121561134157600080fd5b61134a836110aa565b91506020830135801515811461135f57600080fd5b809150509250929050565b6000806000806080858703121561138057600080fd5b611389856110aa565b9350611397602086016110aa565b925060408501359150606085013567ffffffffffffffff8111156113ba57600080fd5b8501601f810187136113cb57600080fd5b6113da8782356020840161125c565b91505092959194509250565b600080604083850312156113f957600080fd5b82359150611409602084016110aa565b90509250929050565b60006020828403121561142457600080fd5b813567ffffffffffffffff81111561143b57600080fd5b610ffa848285016112b4565b6000806040838503121561145a57600080fd5b611463836110aa565b9150611409602084016110aa565b600181811c9082168061148557607f821691505b6020821081036114a557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6000600182016114e157634e487b7160e01b600052601160045260246000fd5b5060010190565b601f8211156105ab576000816000526020600020601f850160051c810160208610156115115750805b601f850160051c820191505b81811015610dab5782815560010161151d565b815167ffffffffffffffff81111561154a5761154a6110f0565b61155e816115588454611471565b846114e8565b602080601f831160018114611593576000841561157b5750858301515b600019600386901b1c1916600185901b178555610dab565b600085815260208120601f198616915b828110156115c2578886015182559484019460019091019084016115a3565b50858210156115e05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001600160a01b038087168352808616602084015250836040830152608060608301526116226080830184611038565b9695505050505050565b60006020828403121561163e57600080fd5b81516109a98161100256fea2646970667358221220a853077bb59912fe23fc58991156a7b0fb9cdbac18ecf6d6e79fafb3607159f164736f6c63430008170033";

type LighthouseNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LighthouseNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LighthouseNFT__factory extends ContractFactory {
  constructor(...args: LighthouseNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LighthouseNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LighthouseNFT__factory {
    return super.connect(runner) as LighthouseNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LighthouseNFTInterface {
    return new Interface(_abi) as LighthouseNFTInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LighthouseNFT {
    return new Contract(address, _abi, runner) as unknown as LighthouseNFT;
  }
}
