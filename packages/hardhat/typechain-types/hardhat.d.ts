/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import * as Contracts from ".";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";
import { ethers } from "ethers";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AxelarExecutable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AxelarExecutable__factory>;
    getContractFactory(
      name: "IAxelarExecutable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAxelarExecutable__factory>;
    getContractFactory(
      name: "IAxelarGasService",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAxelarGasService__factory>;
    getContractFactory(
      name: "IAxelarGateway",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAxelarGateway__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "DealClient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DealClient__factory>;
    getContractFactory(
      name: "DealInfo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DealInfo__factory>;
    getContractFactory(
      name: "SendMessage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SendMessage__factory>;
    getContractFactory(
      name: "YourContractFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YourContractFactory__factory>;
    getContractFactory(
      name: "Actor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Actor__factory>;
    getContractFactory(
      name: "BigInts",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BigInts__factory>;
    getContractFactory(
      name: "FilAddresses",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FilAddresses__factory>;
    getContractFactory(
      name: "Misc",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Misc__factory>;

    getContractAt(
      name: "AxelarExecutable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AxelarExecutable>;
    getContractAt(
      name: "IAxelarExecutable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAxelarExecutable>;
    getContractAt(
      name: "IAxelarGasService",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAxelarGasService>;
    getContractAt(
      name: "IAxelarGateway",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAxelarGateway>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "DealClient",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DealClient>;
    getContractAt(
      name: "DealInfo",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DealInfo>;
    getContractAt(
      name: "SendMessage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SendMessage>;
    getContractAt(
      name: "YourContractFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.YourContractFactory>;
    getContractAt(
      name: "Actor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Actor>;
    getContractAt(
      name: "BigInts",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BigInts>;
    getContractAt(
      name: "FilAddresses",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FilAddresses>;
    getContractAt(
      name: "Misc",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Misc>;

    deployContract(
      name: "AxelarExecutable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AxelarExecutable>;
    deployContract(
      name: "IAxelarExecutable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAxelarExecutable>;
    deployContract(
      name: "IAxelarGasService",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAxelarGasService>;
    deployContract(
      name: "IAxelarGateway",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAxelarGateway>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "DealClient",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DealClient>;
    deployContract(
      name: "DealInfo",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DealInfo>;
    deployContract(
      name: "SendMessage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SendMessage>;
    deployContract(
      name: "YourContractFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.YourContractFactory>;
    deployContract(
      name: "Actor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Actor>;
    deployContract(
      name: "BigInts",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BigInts>;
    deployContract(
      name: "FilAddresses",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FilAddresses>;
    deployContract(
      name: "Misc",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Misc>;

    deployContract(
      name: "AxelarExecutable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AxelarExecutable>;
    deployContract(
      name: "IAxelarExecutable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAxelarExecutable>;
    deployContract(
      name: "IAxelarGasService",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAxelarGasService>;
    deployContract(
      name: "IAxelarGateway",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAxelarGateway>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "DealClient",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DealClient>;
    deployContract(
      name: "DealInfo",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DealInfo>;
    deployContract(
      name: "SendMessage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SendMessage>;
    deployContract(
      name: "YourContractFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.YourContractFactory>;
    deployContract(
      name: "Actor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Actor>;
    deployContract(
      name: "BigInts",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BigInts>;
    deployContract(
      name: "FilAddresses",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FilAddresses>;
    deployContract(
      name: "Misc",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Misc>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
